// <auto-generated />
using System;
using InventoryApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoryApi.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20200710202534_Catalogs")]
    partial class Catalogs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventoryApi.Models.Customer", b =>
                {
                    b.Property<int>("idCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("POHeaderidPO")
                        .HasColumnType("int");

                    b.HasKey("idCustomer");

                    b.HasIndex("POHeaderidPO");

                    b.ToTable("customerCatalog");
                });

            modelBuilder.Entity("InventoryApi.Models.Item", b =>
                {
                    b.Property<int>("idItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("quantityInStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("unitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("idItem");

                    b.ToTable("itemCatalog");
                });

            modelBuilder.Entity("InventoryApi.Models.PODetails", b =>
                {
                    b.Property<int>("idPODetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantiy")
                        .HasColumnType("int");

                    b.HasKey("idPODetails");

                    b.ToTable("PODetail");
                });

            modelBuilder.Entity("InventoryApi.Models.POHeader", b =>
                {
                    b.Property<int>("idPO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PODetailsidPODetails")
                        .HasColumnType("int");

                    b.HasKey("idPO");

                    b.HasIndex("PODetailsidPODetails");

                    b.ToTable("POHeader");
                });

            modelBuilder.Entity("InventoryApi.Models.Roles", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("idRol");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("InventoryApi.Models.StatusPurchaseOrder", b =>
                {
                    b.Property<int>("idStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("POHeaderidPO")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("idStatus");

                    b.HasIndex("POHeaderidPO");

                    b.ToTable("statusOrder");
                });

            modelBuilder.Entity("InventoryApi.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RolesidRol")
                        .HasColumnType("int");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("rolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("id");

                    b.HasIndex("RolesidRol");

                    b.ToTable("userItems");
                });

            modelBuilder.Entity("InventoryApi.Models.Customer", b =>
                {
                    b.HasOne("InventoryApi.Models.POHeader", null)
                        .WithMany("customer")
                        .HasForeignKey("POHeaderidPO");
                });

            modelBuilder.Entity("InventoryApi.Models.POHeader", b =>
                {
                    b.HasOne("InventoryApi.Models.PODetails", null)
                        .WithMany("poHeader")
                        .HasForeignKey("PODetailsidPODetails");
                });

            modelBuilder.Entity("InventoryApi.Models.StatusPurchaseOrder", b =>
                {
                    b.HasOne("InventoryApi.Models.POHeader", null)
                        .WithMany("poStatus")
                        .HasForeignKey("POHeaderidPO");
                });

            modelBuilder.Entity("InventoryApi.Models.User", b =>
                {
                    b.HasOne("InventoryApi.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesidRol");
                });
#pragma warning restore 612, 618
        }
    }
}
